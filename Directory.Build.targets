<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<!--Generates the mod yaml files in the output folder-->
	<Target Name="GenerateYAML" BeforeTargets="Build">
		
		<!--Write mod.yaml file-->
		<WriteLinesToFile
			File="$(TargetDir)/mod.yaml"
			Lines="title: '$(ModName)'
description: '$(ModDescription)'
staticID: $(AssemblyName)"
			Overwrite="true"/>
		<!--Write mod_info.yaml file-->
		<WriteLinesToFile
		  File="$(TargetDir)/mod_info.yaml"
		  Lines="supportedContent: $(SupportedContent)
minimumSupportedBuild: $(TargetGameVersion)
version: $(Version)
APIVersion: 2"
		  Overwrite="true"/>
		<!--Write required DLCs-->
		<WriteLinesToFile
			Condition="'$(DLCsRequired)' != ''"
			File="$(TargetDir)/mod_info.yaml"
			Lines="requiredDlcIds:"
		Overwrite="false"/>

		<ItemGroup>
			<DlcsSplitRequired Include="$(DLCsRequired.Split(`,`))" />
		</ItemGroup>
		
		<MSBuild Projects="$(MSBuildProjectFile)"
				Condition="'$(DLCsRequired)' != ''"
				Properties="DLC=%(DlcsSplitRequired.Identity)"
				Targets="WriteSingleRequirement">
		</MSBuild>
		<!--Write forbidden DLCs-->
		<WriteLinesToFile
			Condition="'$(DLCsForbidden)' != ''"
			File="$(TargetDir)/mod_info.yaml"
			Lines="forbiddenDlcIds:"
		Overwrite="false"/>

		<ItemGroup>
			<DlcsSplitForbidden Include="$(DLCsForbidden.Split(`,`))" />
		</ItemGroup>

		<MSBuild Projects="$(MSBuildProjectFile)"
				Condition="'$(DLCsForbidden)' != ''"
				Properties="DLC=%(DlcsSplitForbidden.Identity)"
				Targets="WriteSingleRequirement">
		</MSBuild>
	</Target>

	<Target Name="WriteSingleRequirement" Condition="'$(DLC)' != ''">
		<WriteLinesToFile
			File="$(TargetDir)/mod_info.yaml"
			Lines=" - $(DLC)"
			Overwrite="false"/>
	</Target>

	<!--Merges all dlls in the output folder into a single dll-->
	<Target Name="ILRepack" AfterTargets="Build" Condition="'$(IsPacked)' == 'true'">
		<ItemGroup>
			<InputAssemblies Include="$(TargetPath)" />
			<InputAssemblies
					Include="$(TargetDir)\*.dll"
					Exclude="$(TargetPath); **/0Harmony.dll; **_public.dll ;**Newtonsoft.Json;**/System.*; **/Microsoft.*" />
		</ItemGroup>

		<ILRepack
		  TargetPlatformVersion="v4"
		  TargetKind="SameAsPrimaryAssembly"
		  InputAssemblies="@(InputAssemblies)"
		  Wildcards="true"
		  LibraryPath="$(GameLibsFolder)"
		  Parallel="true"
		  OutputFile="$(TargetPath)"/>
	</Target>

	<PropertyGroup>
		<TargetFolder Condition="'$(GameLibsFolder)' != '../Lib'">$(ModFolder)\$(TargetName)_dev\</TargetFolder>
		<TargetFolder Condition="'$(GameLibsFolder)' == '../Lib'">../Builds\$(TargetName)</TargetFolder>
	</PropertyGroup>

	<!--Copies the mod dll, the two yaml files and everything inside the ModAssets folder to the target mod folder-->
	<Target Name="CopyModsToDevFolder" AfterTargets="ILRepack" Condition="'$(AssemblyName)' != 'UtilLibs' and '$(AssemblyName)' != 'Util_TwitchIntegrationLib'">

		<Message Text="Executing CopyDLLs task" Importance="High" />

		<ItemGroup>
			<ModAssets Include="$(TargetDir)\ModAssets\**\*.*" />
		</ItemGroup>

		<Copy
		  SourceFiles="
			$(TargetDir)$(TargetName).dll;
			$(TargetDir)$(TargetName).pdb;
			$(TargetDir)mod.yaml;
			$(TargetDir)mod_info.yaml;"
		  
		  DestinationFolder="$(TargetFolder)"/>

		<Message Text="Copy ModAssets to $(TargetFolder)" Importance="High"></Message>

		<Copy SourceFiles="@(ModAssets)" DestinationFolder="$(TargetFolder)\%(RecursiveDir)" SkipUnchangedFiles="false" />

		<Message Text="Copied build files" Importance="High" />

	</Target>

	<!--Create archive version-->
	<!--
	<Target Name="CopyModToArchive" AfterTargets="ILRepack" Condition="'$(AssemblyName)' != 'UtilLibs' and '$(AssemblyName)' != 'Util_TwitchIntegrationLib' and '$(GameLibsFolder)' != '../Lib'">

		<Message Text="Creating archive release.." Importance="High"/>

		<PropertyGroup>
			<CleanedModName>$(ModName.Replace('"','').Replace(";","").Replace(":","")</CleanedModName>
			<ArchiveTargetFolder>$(SolutionDir)Releases\$(CleanedModName)\$(CleanedModName)__$(Version)__$(MinimumSupportedBuild)\</ArchiveTargetFolder>
		</PropertyGroup>

		<ItemGroup>
			<ModAssets Include="$(TargetDir)\ModAssets\**\*.*" />
		</ItemGroup>

		<MakeDir Directories="$(ArchiveTargetFolder)"/>
		<Message Text="Archive Target: $(ArchiveTargetFolder)" Importance="High"></Message>


		<Copy
		  SourceFiles="
			$(TargetDir)$(TargetName).dll;
			$(TargetDir)mod.yaml;
			$(TargetDir)mod_info.yaml;"
		  
		  DestinationFolder="$(ArchiveTargetFolder)"/>

		<Message Text="Copy ModAssets to $(ArchiveTargetFolder)" Importance="High"></Message>

		<Copy SourceFiles="@(ModAssets)" DestinationFolder="$(ArchiveTargetFolder)\%(RecursiveDir)" SkipUnchangedFiles="false" />

		<Message Text="Copied archive files" Importance="High" />

	</Target>-->

	<!--Create folder for publicized dlls if not existing-->
	<Target Name="PubliciseMKDIR" BeforeTargets ="Clean" Condition="'$(GameLibsFolder)' != '../Lib' ">
		<MakeDir
				Directories="$(SolutionDir)\PublicisedAssembly"/>
	</Target>

	<!--Creates publicized dlls from the game dlls-->
	<Target Name="Publicise" AfterTargets="Clean" Condition="'$(AssemblyName)' == 'CycleComma' and '$(GameLibsFolder)' != '../Lib' ">
		<ItemGroup>
			<PubliciseInputAssemblies
					 Include="
				$(GameLibsFolder)/Assembly-CSharp.dll;
				$(GameLibsFolder)/Assembly-CSharp-firstpass.dll;
         "/>
		</ItemGroup>

		<Publicise
			   InputAssemblies="@(PubliciseInputAssemblies)"
			   OutputPath="$(SolutionDir)\PublicisedAssembly"
			   PubliciseCompilerGenerated="false"/>
	</Target>

	<Target Name="GenerateRefAssemblies" AfterTargets="Clean" Condition="'$(AssemblyName)' == 'CycleComma' and '$(GameLibsFolder)' != '../Lib' and '$(RefasmerInstalled)' == '0'">
		<PropertyGroup>
			<!--Workaround for paths containing spaces, e.g. "Program Files (x86)"-->
			<!--For some reason, adding the quotes to GameLibsFolder does not work-->
			<SaneGameLibsFolder>"$(GameLibsFolder)"</SaneGameLibsFolder>
		</PropertyGroup>
		<Exec Command="Refasmer -v -O ../Lib --all -c ../PublicisedAssembly/Assembly-CSharp_public.dll ../PublicisedAssembly/Assembly-CSharp-firstpass_public.dll ^
			$(SaneGameLibsFolder)/Assembly-CSharp.dll $(SaneGameLibsFolder)/Assembly-CSharp-firstpass.dll $(SaneGameLibsFolder)/0Harmony.dll ^
			$(SaneGameLibsFolder)/FMODUnity.dll $(SaneGameLibsFolder)/Newtonsoft.Json.dll $(SaneGameLibsFolder)/UnityEngine.dll ^
			$(SaneGameLibsFolder)/UnityEngine.CoreModule.dll $(SaneGameLibsFolder)/UnityEngine.ImageConversionModule.dll ^
			$(SaneGameLibsFolder)/UnityEngine.AssetBundleModule.dll $(SaneGameLibsFolder)/UnityEngine.PhysicsModule.dll ^
			$(SaneGameLibsFolder)/UnityEngine.Physics2DModule.dll $(SaneGameLibsFolder)/UnityEngine.ParticleSystemModule.dll ^
			$(SaneGameLibsFolder)/UnityEngine.InputLegacyModule.dll $(SaneGameLibsFolder)/Unity.TextMeshPro.dll ^
			$(SaneGameLibsFolder)/UnityEngine.TextRenderingModule.dll $(SaneGameLibsFolder)/UnityEngine.UI.dll ^
			$(SaneGameLibsFolder)/UnityEngine.UIModule.dll $(SaneGameLibsFolder)/UnityEngine.UnityWebRequestModule.dll ^
			$(SaneGameLibsFolder)/Ionic.Zip.dll $(SaneGameLibsFolder)/Newtonsoft.Json.dll $(SaneGameLibsFolder)/com.rlabrecque.steamworks.net.dll $(SaneGameLibsFolder)/netstandard.dll" />
	</Target>

</Project>